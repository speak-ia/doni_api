# Generated by Django 5.1.4 on 2025-01-06 11:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("API", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="enqueteur",
            name="user",
        ),
        migrations.RemoveField(
            model_name="enqueteur",
            name="assigned_enquetes",
        ),
        migrations.AddField(
            model_name="enquete",
            name="additional_instructions",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="enquete",
            name="max_enqueteurs",
            field=models.PositiveIntegerField(default=1),
        ),
        migrations.AddField(
            model_name="enquete",
            name="min_experience",
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name="enquete",
            name="published",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="enquete",
            name="remuneration",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="enquete",
            name="required_localisation",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="enquete",
            name="skills",
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="enqueteur",
            name="date_registered",
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="enqueteur",
            name="email",
            field=models.EmailField(
                default="donidata@gmail.com", max_length=254, unique=True
            ),
        ),
        migrations.AddField(
            model_name="enqueteur",
            name="first_name",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="enqueteur",
            name="last_name",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="enqueteur",
            name="localisation",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="enqueteur",
            name="phone_number",
            field=models.CharField(default="70202070", max_length=20),
        ),
        migrations.AddField(
            model_name="organisation",
            name="date_inscription",
            field=models.DateField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name="organisation",
            name="localisation",
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name="organisation",
            name="type",
            field=models.CharField(
                choices=[
                    ("ONG", "ONG"),
                    ("Entreprise", "Entreprise"),
                    ("Autres", "Autres"),
                ],
                default="ONG",
                max_length=100,
            ),
        ),
        migrations.AlterField(
            model_name="enquete",
            name="status",
            field=models.CharField(
                choices=[
                    ("Active", "Active"),
                    ("Pending", "Pending"),
                    ("Closed", "Closed"),
                ],
                default="Pending",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="organisation",
            name="name",
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "organisation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admins",
                        to="API.organisation",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="enquete",
            name="created_by",
            field=models.ForeignKey(
                default=0,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_enquetes",
                to="API.admin",
            ),
        ),
        migrations.CreateModel(
            name="EnqueteAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "application_status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Accepted", "Accepted"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=50,
                    ),
                ),
                (
                    "assigned_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "enquete",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="API.enquete"
                    ),
                ),
                (
                    "enqueteur",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="API.enqueteur"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="enquete",
            name="enqueteurs",
            field=models.ManyToManyField(
                related_name="applied_enquetes",
                through="API.EnqueteAssignment",
                to="API.enqueteur",
            ),
        ),
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_admin", models.BooleanField(default=False)),
                ("is_enqueteur", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.DeleteModel(
            name="User",
        ),
    ]
